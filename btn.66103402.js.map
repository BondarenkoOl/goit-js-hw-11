{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,oDAMMC,EAAaC,SAASC,cAAc,gBACpCC,EAAUF,SAASC,cAAc,YACjCE,EAAcH,SAASC,cAAc,cACrCG,EAAkBJ,SAASC,cAAc,kBAE3CI,EAAQ,GACRC,EAAO,EACPC,EAAa,EACXC,EAAU,G,SAKDC,I,OAAAA,EAAfC,EAAAb,EAAA,CAAAa,EAAAC,GAAAC,MAAA,SAAAC,EAA4BC,G,IAgBlBC,EACAC,E,qEAhBRF,EAAEG,iBAEFX,EAAO,EACPD,EAAQS,EAAEI,cAAcC,YAAYC,MAAMC,OAC1CnB,EAAQoB,UAAY,GAEpBnB,EAAYoB,UAAUC,IAAI,aAC1BpB,EAAgBmB,UAAUC,IAAI,aAEhB,KAAVnB,EAAY,C,sBACdoB,I,qDAKqB,EAAAC,EAAAC,UAAStB,EAAOC,EAAME,G,QAArCO,EAAMa,EAAAC,KACNb,EAAUD,EAAOe,KACvBvB,EAAaS,EAAQe,KAAKC,OAGA,IAAtBhB,EAAQiB,UACVC,KAEAC,EAAcnB,EAAQe,MACtBK,EAAmBpB,GACI,IAAIN,EAAA2B,GAAJ,CAAmB,cAAcC,WAGtDtB,EAAQiB,UAAYzB,GACtBL,EAAYoB,UAAUgB,OAAO,aAG/BC,I,kDAEA9B,EAAA+B,GAASC,OAAOC,QAAQ,gC,2DAnCDC,MAAAC,KAAAC,W,SAuCZC,I,OAAAA,EAAfrC,EAAAb,EAAA,CAAAa,EAAAC,GAAAC,MAAA,SAAAC,I,IAIUE,EACAC,EAEAiB,E,yEANR3B,GAAQ,E,mBAGe,EAAAoB,EAAAC,UAAStB,EAAOC,EAAME,G,OAArCO,EAAMa,EAAAC,KACNb,EAAUD,EAAOe,KAEjBG,EAAYjB,EAAQiB,UAC1B1B,GAAcS,EAAQe,KAAKC,OAG3BG,EAAcnB,EAAQe,MACC,IAAIrB,EAAA2B,GAAJ,CAAmB,cAAcC,UAEpD/B,IAAe0B,IACjB9B,EAAYoB,UAAUC,IAAI,aAC1BpB,EAAgBmB,UAAUgB,OAAO,cAGnCS,I,kDAEAtC,EAAA+B,GAASC,OAAOC,QAAQ,gC,2DArBAC,MAAAC,KAAAC,WAyB5B,SAASX,EAAcc,GACrB,IAAMC,EAAgBD,EACnBE,KACC,SAAAC,G,IACEC,EAAED,EAAFC,GACAC,EAAaF,EAAbE,cACAC,EAAYH,EAAZG,aACAC,EAAIJ,EAAJI,KACAC,EAAKL,EAALK,MACAC,EAAKN,EAALM,MACAC,EAAQP,EAARO,SACAC,EAASR,EAATQ,UAEA,MAAO,oDAEmCC,OADDP,EAAc,wDAE/BO,OADkBR,EAAG,sCACCQ,OAAtBN,EAAa,WAGFM,OAHWL,EAAK,yJAMhBK,OAHAJ,EAAM,4HAMHI,OAHHH,EAAM,+HAMFG,OAHDF,EAAS,gIAGEE,OAAVD,EAAU,uHAQpDE,KAAK,IAER5D,EAAQ6D,mBAAmB,YAAab,GAG1C,SAASd,EAAmBpB,GAC1BN,EAAA+B,GAASC,OAAOsB,QAAQ,oBAAsCH,OAAlB7C,EAAQiB,UAAU,aAGhE,SAASR,IACPf,EAAA+B,GAASC,OAAOC,QAAQ,+BAG1B,SAAST,IACPxB,EAAA+B,GAASC,OAAOC,QACd,8DAIJ,SAASH,IACPyB,OAAOC,SAAS,CACdC,IAAK,EACLC,SAAU,WAId,SAASpB,IACP,IAAQqB,EAAuBrE,SAC5BC,cAAc,YACdqE,kBAAkBC,wBAFbC,OAIRP,OAAOC,SAAS,CACdC,IAAkB,EAAbE,EACLD,SAAU,WAxIdrE,EAAW0E,iBAAiB,U,SAGA3D,G,OAAbL,EAAYmC,MAAAC,KAAAC,cAF3B3C,EAAYsE,iBAAiB,S,kBAyCd1B,EAAaH,MAAAC,KAAAC,c","sources":["src/js/btn.js"],"sourcesContent":["import '../css/styles.css';\nimport { fetchImg } from './fetchImg';\nimport Notiflix from 'notiflix';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst searchForm = document.querySelector('#search-form');\nconst gallery = document.querySelector('.gallery');\nconst loadMoreBtn = document.querySelector('.load-more');\nconst endOfSearchText = document.querySelector('.gallery__text');\n\nlet query = '';\nlet page = 1;\nlet loadedHits = 0;\nconst perPage = 30;\n\nsearchForm.addEventListener('submit', onSearchForm);\nloadMoreBtn.addEventListener('click', onLoadMoreBtn);\n\nasync function onSearchForm(e) {\n  e.preventDefault();\n\n  page = 1;\n  query = e.currentTarget.searchQuery.value.trim();\n  gallery.innerHTML = '';\n\n  loadMoreBtn.classList.add('is-hidden');\n  endOfSearchText.classList.add('is-hidden');\n\n  if (query === '') {\n    alertEmptySearch();\n    return;\n  }\n\n  try {\n    const object = await fetchImg(query, page, perPage);\n    const objData = object.data;\n    loadedHits = objData.hits.length;\n    // console.log('first', loadedHits)\n\n    if (objData.totalHits === 0) {\n      alertNoImagesFound();\n    } else {\n      renderGallery(objData.hits);\n      alertImagesToFound(objData);\n      const simpleLightBox = new SimpleLightbox('.gallery a').refresh();\n    }\n\n    if (objData.totalHits > perPage) {\n      loadMoreBtn.classList.remove('is-hidden');\n    }\n\n    onScroll();\n  } catch (error) {\n    Notiflix.Notify.failure('Ooops...Something goes wrong');\n  }\n}\n\nasync function onLoadMoreBtn() {\n  page += 1;\n\n  try {\n    const object = await fetchImg(query, page, perPage);\n    const objData = object.data;\n    // const totalPages = Math.ceil(objData.totalHits / perPage);\n    const totalHits = objData.totalHits;\n    loadedHits += objData.hits.length;\n    // console.log('second', loadedHits)\n\n    renderGallery(objData.hits);\n    const simpleLightbox = new SimpleLightbox('.gallery a').refresh();\n\n    if (loadedHits === totalHits) {\n      loadMoreBtn.classList.add('is-hidden');\n      endOfSearchText.classList.remove('is-hidden');\n    }\n\n    onScrollMore();\n  } catch (error) {\n    Notiflix.Notify.failure('Ooops...Something goes wrong');\n  }\n}\n\nfunction renderGallery(images) {\n  const galleryMarkup = images\n    .map(\n      ({\n        id,\n        largeImageURL,\n        webformatURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => {\n        return `\n                <a class=\"gallery__link\" href=\"${largeImageURL}\">\n                    <div class=\"photo-card\" id=\"${id}\">\n                    <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n                    <div class=\"info\">\n                        <p class=\"info-item\">\n                            <b>Likes</b> ${likes}\n                        </p>\n                        <p class=\"info-item\">\n                            <b>Views</b> ${views}\n                        </p>\n                        <p class=\"info-item\">\n                            <b>Comments</b> ${comments}\n                        </p>\n                        <p class=\"info-item\">\n                            <b>Downloads</b> ${downloads}\n                        </p>\n                    </div>\n                </div>\n                </a>\n      `;\n      }\n    )\n    .join('');\n\n  gallery.insertAdjacentHTML('beforeend', galleryMarkup);\n}\n\nfunction alertImagesToFound(objData) {\n  Notiflix.Notify.success(`Hooray! We found ${objData.totalHits} images.`);\n}\n\nfunction alertEmptySearch() {\n  Notiflix.Notify.failure('This field cannot be empty!');\n}\n\nfunction alertNoImagesFound() {\n  Notiflix.Notify.failure(\n    'No images were found for this request, try something else.'\n  );\n}\n\nfunction onScroll() {\n  window.scrollBy({\n    top: 0,\n    behavior: 'smooth',\n  });\n}\n\nfunction onScrollMore() {\n  const { height: cardHeight } = document\n    .querySelector('.gallery')\n    .firstElementChild.getBoundingClientRect();\n\n  window.scrollBy({\n    top: cardHeight * 2,\n    behavior: 'smooth',\n  });\n}\n"],"names":["$bpxeT","parcelRequire","$4da78adf9317e28e$var$searchForm","document","querySelector","$4da78adf9317e28e$var$gallery","$4da78adf9317e28e$var$loadMoreBtn","$4da78adf9317e28e$var$endOfSearchText","$4da78adf9317e28e$var$query","$4da78adf9317e28e$var$page","$4da78adf9317e28e$var$loadedHits","$4da78adf9317e28e$var$perPage","$4da78adf9317e28e$var$_onSearchForm","$parcel$interopDefault","$2TvXO","mark","_callee","e","object","objData","preventDefault","currentTarget","searchQuery","value","trim","innerHTML","classList","add","$4da78adf9317e28e$var$alertEmptySearch","$1DGNh","fetchImg","_ctx","sent","data","hits","length","totalHits","$4da78adf9317e28e$var$alertNoImagesFound","$4da78adf9317e28e$var$renderGallery","$4da78adf9317e28e$var$alertImagesToFound","$5IjG7","refresh","remove","$4da78adf9317e28e$var$onScroll","$iU1Pc","Notify","failure","apply","this","arguments","$4da78adf9317e28e$var$_onLoadMoreBtn","$4da78adf9317e28e$var$onScrollMore","images","galleryMarkup","map","param","id","largeImageURL","webformatURL","tags","likes","views","comments","downloads","concat","join","insertAdjacentHTML","success","window","scrollBy","top","behavior","cardHeight","firstElementChild","getBoundingClientRect","height","addEventListener"],"version":3,"file":"btn.66103402.js.map"}